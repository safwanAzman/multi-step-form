import React , {useState} from 'react'
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
const inter = Inter({ subsets: ['latin'] })
import { Formik } from 'formik';


import desktopBgSidebar from '../assets/img/bg-sidebar-desktop.svg'
import mobileBgSidebar from '../assets/img/bg-sidebar-mobile.svg'
import Step1 from '@/components/step/step1'
import Tab from '@/components/tab/tab'
import {step} from '@/components/sidebar'
import {Schema} from '@/components/schema'

export default function Home() {
  const [nextStep, setNextStep] = useState(0);

  const handleNextStep = async (data,actions) => {
    try{
      setNextStep(prevStep => prevStep + 1);
    } catch (e) {
        alert('error')
    }
  };

  const handlePrevStep = async () => {
    try{
      setNextStep(prevStep => prevStep - 1);
    } catch (e) {
        alert('error')
    }
  };
  return (
    <>
      <Head>
        <title>Multi Step Form</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    
      <div className="block lg:hidden">
        <div className="bg-no-repeat bg-cover h-[20rem] flex items-center justify-center" style={{ backgroundImage: `url(${mobileBgSidebar.src})` }}>
            {step.map((step,index) => (
              <div key={step.id}>
                <Tab
                  stepNo={step.stepNo}
                  state={index === nextStep ? "active" : ""}
                />
              </div>
            ))}
        </div>
      </div>
      <main className="flex flex-col items-center justify-start h-screen pt-32 lg:justify-center lg:pt-0 bg-neutral-magnolia ">
        
        <div className="absolute mx-4 bg-white rounded-lg shadow-lg top-52 lg:relative lg:top-0 ">
          <div className="grid grid-cols-12 gap-8 lg:gap-6 md:gap-12">
            <div className="hidden col-span-12 lg:col-span-4 w-[21rem] bg-no-repeat bg-center h-[38rem] lg:block relative" style={{ backgroundImage: `url(${desktopBgSidebar.src})` }}>
              <div className="absolute top-[4rem] left-[4rem]">
                {step.map((step,index) => (
                  <div key={step.id} >
                    <Tab 
                      stepNo={step.stepNo}
                      title={step.title}
                      message={step.message}
                      state={index === nextStep ? "active" : ""}
                    />
                  </div>
                ))}
              </div>
            </div>
            <div className="col-span-12 px-8 py-5 lg:pr-[7rem] lg:col-span-8">

            <Formik
              validationSchema={Schema}
              initialValues={{ 
                  name:'',
                  email:'',
                  phone:''
              }}
              onSubmit={(values,actions)=>{
                handleNextStep(values,actions)
              }}
            >
            {({ handleChange,handleSubmit,values,errors,touched}) => (
            <>
                            
              {nextStep == 0 ?
                <Step1
                  nameId="name"
                  nameName="name"
                  nameValue={values.name}
                  nameOnChange={handleChange("name")}
                  nameErrorMessage={errors.name && touched.name ? errors.name : null}
              
                  emailId="email"
                  emailName="email"
                  emailValue={values.email}
                  emailOnChange={handleChange("email")}
                  emailErrorMessage={errors.email && touched.email ? errors.email : null}
              
                  phoneId="phone"
                  phoneName="phone"
                  phoneValue={values.phone}
                  phoneOnChange={handleChange("phone")}
                  phoneErrorMessage={errors.phone && touched.phone ? errors.phone : null}
                />
                : null}

              {nextStep == 1 ?
                <div>Step2</div>
              : null}


              {nextStep == 2 ?
                  <div>Step3</div>
              : null}

              {nextStep == 3 ?
                  <div>Step4</div>
              : null}

              {nextStep == 4 ?
                  <div>Step5</div>
              : null}


              {nextStep != 4 ?
                <div className={nextStep > 0 ? 'flex justify-between mt-16' : 'flex justify-end mt-16'}>
                  {nextStep > 0 ?
                    <button type="button" onClick={handlePrevStep} className="px-4 py-2 text-base rounded-md text-neutral-coolGray myFontBold hover:text-primary-purplishBlue">
                        Go Back
                    </button>
                  : null}
                  <button type="submit" onClick={handleSubmit} className="w-32 h-12 px-4 py-2 text-base text-white rounded-md myFontRegular bg-primary-marineBlue hover:bg-primary-purplishBlue">
                      Next Step
                  </button>
                </div>
              : null}
              </>
              )}
              </Formik>
            </div>
          </div>
        </div>
      </main>
    
    </>
  )
}
